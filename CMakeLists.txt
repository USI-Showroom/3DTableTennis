cmake_minimum_required(VERSION 2.8)

project(3DTableTennis)


IF(WIN32)
	SET(CMAKE_PREFIX_PATH "ENV{QT_PATH}")
ENDIF()


###########################
# Sources
file(GLOB_RECURSE 3DTABLETENNIS_SOURCES "src/*.cpp")
file(GLOB_RECURSE 3DTABLETENNIS_HEADERS "src/*.h")

#file(GLOB_RECURSE 3DTABLETENNIS_QT_SRC_HEADERS "src/qt/*.h" "src/game/*.h")
file(GLOB_RECURSE 3DTABLETENNIS_UIS "src/*.ui")
#file(GLOB_RECURSE 3DTABLETENNIS_RESOURCES "src/resource/*.qrc")

SET(3DTABLETENNIS_MAIN "src/main.cpp")
SET(3DTABLETENNIS_INCLUDE "src" "src/qt" "src/kinect" "src/geom" "src/game")
#########################

#########################
# Libs
FIND_PACKAGE(Qt5 COMPONENTS Core Gui Xml OpenGL Widgets Multimedia REQUIRED)
INCLUDE_DIRECTORIES(${Qt5Core_INCLUDE_DIRS})
ADD_DEFINITIONS(${Qt5Core_DEFINITIONS})
SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; ${Qt5Core_LIBRARIES})

INCLUDE_DIRECTORIES(${Qt5Gui_INCLUDE_DIRS})
ADD_DEFINITIONS(${Qt5Gui_DEFINITIONS})
SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; ${Qt5Gui_LIBRARIES})

INCLUDE_DIRECTORIES(${Qt5Xml_INCLUDE_DIRS})
ADD_DEFINITIONS(${Qt5Xml_DEFINITIONS})
SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; ${Qt5Xml_LIBRARIES})

INCLUDE_DIRECTORIES(${Qt5OpenGL_INCLUDE_DIRS})
ADD_DEFINITIONS(${Qt5OpenGL_DEFINITIONS})
SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; ${Qt5OpenGL_LIBRARIES})

INCLUDE_DIRECTORIES(${Qt5Widgets_INCLUDE_DIRS})
ADD_DEFINITIONS(${Qt5Widgets_DEFINITIONS})
SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; ${Qt5Widgets_LIBRARIES})

INCLUDE_DIRECTORIES(${Qt5Multimedia_INCLUDE_DIRS})
ADD_DEFINITIONS(${Qt5Multimedia_DEFINITIONS})
SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; ${Qt5Multimedia_LIBRARIES})


IF(WIN32)
    FIND_PACKAGE(Qt5 COMPONENTS Winextras REQUIRED) 

    INCLUDE_DIRECTORIES(${Qt5Winextras_INCLUDE_DIRS})
    ADD_DEFINITIONS(${Qt5Winextras_DEFINITIONS})
    SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; ${Qt5Winextras_LIBRARIES})

    SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; "$ENV{KINECTSDK10_DIR}\\Lib\\x86\\Kinect10.lib")
    SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES}; "src\\3rdParty\\glew-1.6.0\\lib\\glew32.lib")

    INCLUDE_DIRECTORIES("$ENV{KINECTSDK10_DIR}\\inc")
    INCLUDE_DIRECTORIES("src\\3rdParty")
    INCLUDE_DIRECTORIES("src\\3rdParty\\glew-1.6.0\\include")


    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DNOMINMAX")
ELSE()
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DNO_KINECT")
ENDIF()

FIND_PACKAGE(OpenGL REQUIRED)
IF(OPENGL_FOUND)         
    SET(3DTABLETENNIS_LINK_LIBRARIES ${3DTABLETENNIS_LINK_LIBRARIES} ${OPENGL_LIBRARIES})   
    INCLUDE_DIRECTORIES(${QT_QTOPENGL_INCLUDE_DIR} ${OPENGL_INCLUDE_DIR} )
ELSE()
    message(FATAL_ERROR "OpenGl not found!")
ENDIF()
#########################

#########################
# QT
set(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(QT_USE_QTXML TRUE)
SET(QT_USE_QTOPENGL TRUE)

QT5_WRAP_CPP(3DTABLETENNIS_HEADERS_MOC ${3DTABLETENNIS_QT_SRC_HEADERS})  
QT5_WRAP_UI(3DTABLETENNIS_FORMS_HEADERS ${3DTABLETENNIS_UIS})  
QT5_ADD_RESOURCES(3DTABLETENNIS_RESOURCES_RCC ${3DTABLETENNIS_RESOURCES}) 
######################### 



set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall")

set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG")
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE}")


INCLUDE_DIRECTORIES(${3DTABLETENNIS_INCLUDE})

SET(3DTABLETENNIS_SOURCES ${3DTABLETENNIS_MAIN}; ${3DTABLETENNIS_SOURCES}; ${VESTIGE_RESOURCES_RCC})


add_executable(3DTableTennis ${3DTABLETENNIS_SOURCES} ${3DTABLETENNIS_HEADERS_MOC} ${3DTABLETENNIS_FORMS_HEADERS} ${3DTABLETENNIS_HEADERS} ${3DTABLETENNIS_RESOURCES_RCC})
TARGET_LINK_LIBRARIES(3DTableTennis ${3DTABLETENNIS_LINK_LIBRARIES})
